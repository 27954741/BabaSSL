# Generated with generate_ssl_tests.pl

num_tests = 3

test-0 = 0-test rsa sign keyless
test-1 = 1-test rsa decrypt and sign keyless
test-2 = 2-test ecc sign keyless
# ===========================================================

[0-test rsa sign keyless]
ssl_conf = 0-test rsa sign keyless-ssl

[0-test rsa sign keyless-ssl]
server = 0-test rsa sign keyless-server
client = 0-test rsa sign keyless-client

[0-test rsa sign keyless-server]
Certificate = ${ENV::TEST_CERTS_DIR}/server-pss-cert.pem
CipherString = DEFAULT
Keyless = on
PrivateKey = ${ENV::TEST_CERTS_DIR}/server-pss-key.pem

[0-test rsa sign keyless-client]
CipherString = DEFAULT
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-0]
ExpectedResult = Success


# ===========================================================

[1-test rsa decrypt and sign keyless]
ssl_conf = 1-test rsa decrypt and sign keyless-ssl

[1-test rsa decrypt and sign keyless-ssl]
server = 1-test rsa decrypt and sign keyless-server
client = 1-test rsa decrypt and sign keyless-client

[1-test rsa decrypt and sign keyless-server]
Certificate = ${ENV::TEST_CERTS_DIR}/test_rsa_crt.pem
CipherString = DEFAULT
Keyless = on
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
PrivateKey = ${ENV::TEST_CERTS_DIR}/test_rsa_key.pem

[1-test rsa decrypt and sign keyless-client]
CipherString = AES128-GCM-SHA256
MaxProtocol = TLSv1.2
MinProtocol = TLSv1.2
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/test_rsa_crt.pem
VerifyMode = Peer

[test-1]
ExpectedCipher = AES128-GCM-SHA256
ExpectedResult = Success


# ===========================================================

[2-test ecc sign keyless]
ssl_conf = 2-test ecc sign keyless-ssl

[2-test ecc sign keyless-ssl]
server = 2-test ecc sign keyless-server
client = 2-test ecc sign keyless-client

[2-test ecc sign keyless-server]
Certificate = ${ENV::TEST_CERTS_DIR}/server-cecdsa-cert.pem
CipherString = DEFAULT
Keyless = on
PrivateKey = ${ENV::TEST_CERTS_DIR}/server-cecdsa-key.pem

[2-test ecc sign keyless-client]
CipherString = DEFAULT
VerifyCAFile = ${ENV::TEST_CERTS_DIR}/rootcert.pem
VerifyMode = Peer

[test-2]
ExpectedResult = Success


